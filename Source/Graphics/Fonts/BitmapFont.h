//
//  BitmapFont.h
//  GameDev2D
//
//  Created by Bradley Flood on 2013-08-23.
//  Copyright (c) 2013 Algonquin College. All rights reserved.
//

#ifndef __GameDev2D__BitmapFont__
#define __GameDev2D__BitmapFont__

#include "Font.h"
#include "../Textures/TextureFrame.h"
#include "rapidxml.hpp"


using namespace glm;
using namespace rapidxml;
using namespace std;

namespace GameDev2D
{
    //Forward declarations
    class CharacterData;
    
    //The BitmapFont class loads bitmap fonts generated by the 'Glyph Designer' (https://71squared.com/en/glyphdesigner)
    //Bitmap fonts can NOT modify the size of the font loaded, that must be done in 'Glyph Designer itself'
    class BitmapFont : public Font
    {
    public:
        //A bitmap font should only be generated through the FontManager
        BitmapFont(const string& filename);
        ~BitmapFont();

        //Returns the TextureFrame for a given character
        TextureFrame* GetTextureFrameForCharacter(char character);
        
        //Methods to get the source frame, x advance and bearing data for a given character
        SourceFrame GetSourceFrameForCharacter(char character);
        unsigned short GetAdvanceXForCharacter(char character);
        char GetBearingXForCharacter(char character);
        char GetBearingYForCharacter(char character);
        
        //Info getter methods
        bool IsBold();
        bool IsItalic();
        bool IsUnicode();
        unsigned int GetStretchH();
        bool IsSmooth();
        bool IsAntiAliased();
        SourceFrame GetPadding();
        vec2 GetSpacing();
        
        //Common getter methods
        unsigned int GetTextureWidth();
        unsigned int GetTextureHeight();
        unsigned int GetNumberOfPages();
        
    protected:
        //XML parsing methods
        void ParseXmlText(char* xmlText);
        void ParseInfoNode(xml_node<> *infoNode);
        void ParseCommonNode(xml_node<> *commonNode);
        void ParsePagesNode(xml_node<> *pagesNode);
        void ParseCharactersNode(xml_node<> *charactersNode);
        
        //Conveniance methods to help load the bitmap font data
        SourceFrame SourceFrameFromString(const string& string);
        vec2 Vec2FromString(const string& string);
        
        //The FontManager access the protected methods
        friend class FontManager;
        
    private:
        //Info
        bool m_IsBold;
        bool m_IsItalic;
        bool m_IsUnicode;
        unsigned int m_StretchH;
        bool m_IsSmooth;
        bool m_IsAntiAliased;
        SourceFrame m_Padding;
        vec2 m_Spacing;
        
        //Common
        unsigned int m_TextureWidth;
        unsigned int m_TextureHeight;
        unsigned int m_NumberOfPages;
        
        //Pages
        vector<pair<unsigned int, string>> m_Pages;
        
        //Characters
        map<char, CharacterData*> m_CharacterData;
        
        //Texture(s)
        TextureFrame** m_TextureFrames;
    };
    
    //Holds character data for each bitmap font character
    class CharacterData
    {
    public:
        CharacterData();
        ~CharacterData();
        
        SourceFrame GetSourceFrame();
        vec2 GetOffset();
        unsigned int GetAdvanceX();
        
    protected:
        char ParseCharacterNode(xml_node<> *characterNode, BitmapFont* bitmapFont);
        friend class BitmapFont;
        
        SourceFrame m_SourceFrame;
        vec2 m_Offset;
        unsigned int m_AdvanceX;
        unsigned int m_PageId;
    };
}

#endif /* defined(__GameDev2D__BitmapFont__) */
